class Employee:
    def __init__(self, name, number):
        self.__name = name
        self.__number = number

    def get_name(self):
        return self.__name

    def get_number(self):
        return self.__number

    def set_name(self, name):
        self.__name = name

    def set_number(self, number):
        self.__number = number


class ProductionWorker(Employee):
    def __init__(self, name, number, hourly_pay_rate, shift_number):
        super().__init__(name, number)
        self.__hourly_pay_rate = hourly_pay_rate
        self.__shift_number = shift_number

    def get_hourly_pay_rate(self):
        return self.__hourly_pay_rate

    def get_shift_number(self):
        return self.__shift_number

    def set_hourly_pay_rate(self, hourly_pay_rate):
        self.__hourly_pay_rate = hourly_pay_rate

    def set_shift_number(self, shift_number):
        self.__shift_number = shift_number


if __name__ == "__main__":
    # Prompting user for data
    name = input("Enter employee name: ")
    number = input("Enter employee number: ")
    hourly_pay_rate = float(input("Enter hourly pay rate: "))
    shift_number = int(input("Enter shift number (1 for day, 2 for night): "))

    # Creating an instance of ProductionWorker
    worker = ProductionWorker(name, number, hourly_pay_rate, shift_number)

    # Displaying entered data using accessor methods
    print("\nEmployee Details:")
    print("Name:", worker.get_name())
    print("Employee Number:", worker.get_number())
    print("Hourly Pay Rate:", worker.get_hourly_pay_rate())
    print("Shift Number:", worker.get_shift_number())